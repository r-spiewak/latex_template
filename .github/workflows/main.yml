env:
  PACKAGE_NAME: <unnamed>

name: Run Tests
on: push
jobs:
  test:
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
    defaults:
      run:
        shell: bash
    runs-on: ${{ matrix.platform }}
    steps:
    - uses: actions/checkout@v4
    # - uses: actions/setup-node@v3
    #   with:
    #     node-version: 16
    # - run: npm install-ci-test
    # - uses:
    - name: Set up TeX Live
      # uses: teatimeguest/setup-texlive-action@v2
      # uses: dante-ev/texlive-action@v1
      uses: teatimeguest/setup-texlive-action@v3
      # env:
      #     TEXLIVE_INSTALL_MIRROR: http://mirror.ctan.org/systems/texlive/tlnet
      with:
        # texlive-version: 2024  # <- Pin to TeX Live 2024 (not 'latest')
        # mirror: http://mirror.ctan.org/systems/texlive/tlnet
        # mirror-url: http://ctan.math.utah.edu/ctan/tex-archive/systems/texlive/tlnet
        # version: 2025
        # repository: http://mirror.ctan.org/systems/texlive/tlnet
        repository: http://ctan.math.utah.edu/tex-archive/systems/texlive/tlnet
        packages: >-
          latex-bin
          latexmk
          scheme-basic
          catchfile
          silence
          # filecontents
    - name: Compile tests
      run: latexmk -pdf -shell-escape tests.tex
    # - name: Parse test results
    #   run: bash utils/parse_tests.sh tests.log
    - name: Running checks
      # run: |
      #   source $VENV  
      #   bash checks.sh
      run: |
        bash checks.sh merge tests.log
    - name: Check OS
      run: |
        echo ${{ runner.os }}
    - name: Upload PDF result
      uses: actions/upload-artifact@v4
      if: ${{ runner.os == 'Linux' }}
      with:
        name: compiled-tests
        path: tests.pdf
        # overwrite: true
    - name: Upload logs
      uses: actions/upload-artifact@v4
      if: ${{ runner.os == 'Linux' }}
      with:
        name: test-logs
        path: tests.log
        # overwrite: true
    # - name: Clean auxiliary files
    #   run: latexmk -c
  # publish:
  #   needs: [test]
  #   steps:
  #   - uses: actions/checkout@v4

name: Build and Release LaTeX Package
# This should be triggered for a tagged release, such as:
# git tag v1.0.0
# git push origin v1.0.0
on:
  push:
    tags:
      - 'v*'
      # - v[0-9]+(\.[0-9]+)*([-\.]\S+)?
jobs:
  build:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:  
    - uses: actions/checkout@v4
    - name: Set up TeX Live
      uses: teatimeguest/setup-texlive-action@v3
      with:
        repository: http://ctan.math.utah.edu/tex-archive/systems/texlive/tlnet
        packages: >-
          latex-bin
          latexmk
          scheme-basic
          catchfile
          silence
          # filecontents
    - name: Generate .sty from .ins
      if: ${{ runner.os == 'Linux' }}
      run: pdflatex $PACKAGE_NAME.ins
    - name: Upload .sty as artifact
      if: ${{ runner.os == 'Linux' }}
      uses: actions/upload-artifact@v4
      with:
        name: $PACKAGE_NAME-sty
        path: $PACKAGE_NAME.sty
    - name: Create GitHub release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          $PACKAGE_NAME.sty
          $PACKAGE_NAME.dtx
          $PACKAGE_NAME.ins
          README.md
    - name: Create CTAN zip bundle
      run: zip $PACKAGE_NAME.zip $PACKAGE_NAME.dtx $PACKAGE_NAME.ins $PACKAGE_NAME.sty README.md
    
